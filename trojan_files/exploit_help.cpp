#include <iostream>
#include <memory>
#include "exploit_help.h"

exploit::exploit() {}

void exploit::crontab_add(const char * command) {
	std::array<char, 128> buffer;
	std::string result;
	std::unique_ptr<FILE, decltype(&pclose)> pipe(popen(command, "r"), pclose);
	if (!pipe) {
		throw std::runtime_error("popen() failed!");
	}
	while (fgets(buffer.data(), buffer.size(), pipe.get()) != nullptr) {
		result += buffer.data();
	}
	StoreOutput(result);
}

void exploit::crontab_l() {
	std::array<char, 128> buffer;
	std::string result;
	std::unique_ptr<FILE, decltype(&pclose)> pipe(popen("crontab -l", "r"), pclose);
	if (!pipe) {
		throw std::runtime_error("popen() failed!");
	}
	while (fgets(buffer.data(), buffer.size(), pipe.get()) != nullptr) {
		result += buffer.data();
	}
	StoreOutput(result);
}

void exploit::StoreOutput(std::string result) {
	outputStore = result;
}

void exploit::DisplayOutput() {
	std::cout << outputStore << std::endl;
}

exploit::~exploit() {
}
